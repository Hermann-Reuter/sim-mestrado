cat(glue::glue(
"MÉTRICAS DE ERRO:\n",
"  - RMSE: {round(rmse_val,2)} dias\n",
"  - MAE:  {round(mae_val,2)} dias\n\n",
"MÉTRICAS DE AJUSTE:\n",
"  - R² (Treino): {round(r2_treino,4)}\n",
"  - R² (Teste):  {round(r2_val,4)}\n",
"  - R² Ajustado: {round(r2_adj,4)}\n\n"
))
# Interpretação rápida
poder <- case_when(
r2_val > 0.7 ~ "ÓTIMO",
r2_val > 0.5 ~ "BOM",
r2_val > 0.3 ~ "MODERADO",
TRUE ~ "FRACO"
)
simbolo <- ifelse(r2_val > 0.5, "✓", "⚠")
cat(glue::glue(
"INTERPRETAÇÃO:\n",
"  {simbolo} Modelo com poder preditivo {poder}\n",
"  - Erro médio: {round(mae_val,1)} dias\n"
))
# teste f global
cat("========== 8. TESTE F GLOBAL (SIGNIFICÂNCIA DO MODELO) ==========\n\n")
f_stat <- summary(modelo)$fstatistic
p_global <- pf(f_stat[1], f_stat[2], f_stat[3], lower.tail = FALSE)
cat("Teste de hipótese:\n")
cat("  H0: Todos os coeficientes = 0 (modelo não explica nada)\n")
cat("  H1: Pelo menos um coeficiente ≠ 0 (modelo explica algo)\n\n")
cat(glue::glue(
"Estatística F:     {round(f_stat[1],2)}\n",
"Graus de liberdade: {f_stat[2]} e {f_stat[3]}\n",
"P-valor:           {format.pval(p_global, digits=3)}\n"
))
if (p_global < 0.05) {
cat("\n✓ CONCLUSÃO: Rejeitamos H0. O modelo é SIGNIFICATIVO (p < 0.05)\n")
cat("  O conjunto de variáveis explica significativamente a variação em IDADE_DIAS\n\n")
} else {
cat("\n✗ CONCLUSÃO: Não rejeitamos H0. O modelo NÃO é significativo (p >= 0.05)\n\n")
}
# residuos
residuos <- dados_teste %>%
mutate(Predito = pred_teste,
Residuo = IDADE_DIAS - pred_teste,
r2_teste = r2_val)
# 1. Resíduos vs Valores Ajustados
p1 <- ggplot(residuos, aes(x = Predito, y = Residuo)) +
geom_point(alpha = 0.3, color = "blue") +
geom_hline(yintercept = 0, color = "red", linetype = "dashed", linewidth = 1) +
labs(x = "Valores Previstos (dias)", y = "Resíduos (dias)",
title = "Resíduos vs Valores Previstos") +
theme_minimal()
print(p1)
# 2. Q-Q Plot
p2 <- ggplot(residuos, aes(sample = Residuo)) +
stat_qq(alpha = 0.3, color = "blue") +
stat_qq_line(color = "red", linewidth = 1) +
labs(title = "Q-Q Plot (Normalidade dos Resíduos)") +
theme_minimal()
print(p2)
# 3. Histograma dos Resíduos
p3 <- ggplot(residuos, aes(x = Residuo)) +
geom_histogram(bins = 50, fill = "lightblue", color = "white") +
geom_vline(xintercept = 0, color = "red", linetype = "dashed", linewidth = 1) +
labs(x = "Resíduos (dias)", y = "Frequência", title = "Distribuição dos Resíduos") +
theme_minimal()
print(p3)
# 4. Real vs Previsto
p4 <- ggplot(residuos, aes(x = IDADE_DIAS, y = Predito)) +
geom_point(alpha = 0.3, color = "blue") +
geom_abline(intercept = 0, slope = 1, color = "red", linetype = "dashed", linewidth = 1) +
geom_smooth(method = "lm", se = FALSE, color = "blue", linewidth = 1) +
labs(x = "Dias Reais", y = "Dias Previstos",
title = paste0("Real vs Previsto (R² = ", round(r2_val, 3), ")")) +
theme_minimal()
print(p4)
# analise por grupo
resumo_grupo <- function(df, var_grupo, var_alvo = "IDADE_DIAS") {
df %>%
group_by(.data[[var_grupo]]) %>%
summarise(
N = n(),
Media = mean(.data[[var_alvo]]),
Mediana = median(.data[[var_alvo]]),
DP = sd(.data[[var_alvo]]),
.groups = "drop"
) %>%
arrange(desc(Media))
}
# Função para ANOVA ou t-test dependendo da variável
teste_significancia <- function(df, var_grupo, var_alvo = "IDADE_DIAS") {
grupos <- unique(df[[var_grupo]])
if(length(grupos) == 2) {
t_res <- t.test(.data[[var_alvo]] ~ .data[[var_grupo]], data = df %>% filter(.data[[var_grupo]] %in% grupos))
list(p = t_res$p.value, tipo = "t-test")
} else {
aov_res <- aov(.data[[var_alvo]] ~ .data[[var_grupo]], data = df)
p_val <- summary(aov_res)[[1]][["Pr(>F)"]][1]
list(p = p_val, tipo = "ANOVA")
}
}
# Lista de variáveis de grupo
grupos <- c("CAUSA_BLOCO", "SEXO", "RACACOR")
for(g in grupos) {
cat("========== ANÁLISE POR GRUPO:", g, "==========\n\n")
# Filtrar sexo ignorado
df_sub <- if(g == "SEXO") df_clean %>% filter(SEXO != "Ignorado") else df_clean
resumo <- resumo_grupo(df_sub, g)
print(resumo)
teste <- teste_significancia(df_sub, g)
cat("\nTeste de significância (", teste$tipo, "): p-valor =", format.pval(teste$p, digits = 3), "\n")
cat(ifelse(teste$p < 0.05, "✓ DIFERENÇAS SIGNIFICATIVAS\n\n", "✗ Sem diferença significativa\n\n"))
}
renv::install("broom")
renv::snapshot()
rm(list = ls())
if(!is.null(dev.list())) dev.off()
cat("\014")
library(tidyverse)
library(rsample)
library(yardstick)
library(broom)
# 1. import
load("mortalidade_infantil_limpo.RData")
df <- mortalidade_infantil_limpo
glimpse(df)
# 2. tidy
# clear NULL values
df_clean <- df %>%
select(IDADE_DIAS, RAZAOVIVMORT, PESO, SEMAGESTAC, CAUSA_BLOCO, SEXO, RACACOR) %>%
mutate(
across(c(IDADE_DIAS, PESO, SEMAGESTAC, RAZAOVIVMORT), ~ as.numeric(as.character(.)))
) %>%
drop_na()
glimpse(df_clean)
# 3. understand
summary(df_clean)
# correlation analysis
report_correlation <- function(df, var1, var2, sig_level = 0.05) {
x <- df[[var1]]
y <- df[[var2]]
cor_res <- cor.test(x, y)
r <- cor_res$estimate
p <- cor_res$p.value
signif_flag <- p < sig_level
direction <- ifelse(r > 0, "POSITIVA", "NEGATIVA")
cat(sprintf("%s x %s:\n", var1, var2))
cat(sprintf(" - Correlação (r): %7.4f\n", r))
cat(sprintf(" - P-valor       : %7.4f\n", p))
cat(sprintf(" - Significativo: %s\n", ifelse(signif_flag, "SIM ✓", "NÃO ✗")))
if (signif_flag) {
cat(sprintf(" - Interpretação: Correlação %s - quanto maior %s, %s %s\n\n",
direction,
var1,
ifelse(r > 0, "maior", "menor"),
var2))
} else {
cat("\n")
}
invisible(c(r = r, p = p))
}
cor_peso <- report_correlation(df_clean, "PESO", "IDADE_DIAS")
cor_sema <- report_correlation(df_clean, "SEMAGESTAC", "IDADE_DIAS")
cor_razao <- report_correlation(df_clean, "RAZAOVIVMORT", "IDADE_DIAS")
# A análise das correlações mostra que todas as variáveis numéricas
# apresentam correlação positiva com IDADE_DIAS e são estatisticamente significativas pelo p-valor,
# mas o efeito prático é desprezível considerando o coeficiente de Pearson.
# ! VIÉS
# Atenção: essas correlações foram calculadas apenas para os bebês que faleceram.
# Isso gera um viés de seleção, pois ignora totalmente os sobreviventes.
# O padrão observado pode não se aplicar a toda a população de nascimentos.
# Seria necessário um dataset complementar incluindo dados de bebês que sobreviveram.
# 3.1 model
# split training x test df
set.seed(42)
split <- initial_split(df_clean, prop = 0.8)
dados_treino <- training(split)
dados_teste <- testing(split)
modelo <- lm(IDADE_DIAS ~ PESO + SEMAGESTAC + RAZAOVIVMORT + CAUSA_BLOCO + SEXO + RACACOR,
data = dados_treino)
coef_df <- as.data.frame(summary(modelo)$coefficients) %>%
tibble::rownames_to_column("Variavel") %>%
mutate(
Significativo = case_when(
`Pr(>|t|)` < 0.05 ~ "***",
`Pr(>|t|)` < 0.1  ~ "*",
TRUE ~ ""
)
)
print(coef_df)
# teste
pred_teste <- predict(modelo, newdata = dados_teste)
resultado <- tibble(
Observado = dados_teste$IDADE_DIAS,
Predito  = pred_teste
)
rmse_val <- rmse(resultado, truth = Observado, estimate = Predito)$.estimate
mae_val  <- mae(resultado, truth = Observado, estimate = Predito)$.estimate
r2_val   <- rsq(resultado, truth = Observado, estimate = Predito)$.estimate
r2_treino <- summary(modelo)$r.squared
r2_adj    <- summary(modelo)$adj.r.squared
cat(glue::glue(
"MÉTRICAS DE ERRO:\n",
"  - RMSE: {round(rmse_val,2)} dias\n",
"  - MAE:  {round(mae_val,2)} dias\n\n",
"MÉTRICAS DE AJUSTE:\n",
"  - R² (Treino): {round(r2_treino,4)}\n",
"  - R² (Teste):  {round(r2_val,4)}\n",
"  - R² Ajustado: {round(r2_adj,4)}\n\n"
))
# Interpretação rápida
poder <- case_when(
r2_val > 0.7 ~ "ÓTIMO",
r2_val > 0.5 ~ "BOM",
r2_val > 0.3 ~ "MODERADO",
TRUE ~ "FRACO"
)
simbolo <- ifelse(r2_val > 0.5, "✓", "⚠")
cat(glue::glue(
"INTERPRETAÇÃO:\n",
"  {simbolo} Modelo com poder preditivo {poder}\n",
"  - Erro médio: {round(mae_val,1)} dias\n"
))
# teste f global
cat("========== 8. TESTE F GLOBAL (SIGNIFICÂNCIA DO MODELO) ==========\n\n")
f_stat <- summary(modelo)$fstatistic
p_global <- pf(f_stat[1], f_stat[2], f_stat[3], lower.tail = FALSE)
cat("Teste de hipótese:\n")
cat("  H0: Todos os coeficientes = 0 (modelo não explica nada)\n")
cat("  H1: Pelo menos um coeficiente ≠ 0 (modelo explica algo)\n\n")
cat(glue::glue(
"Estatística F:     {round(f_stat[1],2)}\n",
"Graus de liberdade: {f_stat[2]} e {f_stat[3]}\n",
"P-valor:           {format.pval(p_global, digits=3)}\n"
))
if (p_global < 0.05) {
cat("\n✓ CONCLUSÃO: Rejeitamos H0. O modelo é SIGNIFICATIVO (p < 0.05)\n")
cat("  O conjunto de variáveis explica significativamente a variação em IDADE_DIAS\n\n")
} else {
cat("\n✗ CONCLUSÃO: Não rejeitamos H0. O modelo NÃO é significativo (p >= 0.05)\n\n")
}
# residuos
residuos <- dados_teste %>%
mutate(Predito = pred_teste,
Residuo = IDADE_DIAS - pred_teste,
r2_teste = r2_val)
# 1. Resíduos vs Valores Ajustados
p1 <- ggplot(residuos, aes(x = Predito, y = Residuo)) +
geom_point(alpha = 0.3, color = "blue") +
geom_hline(yintercept = 0, color = "red", linetype = "dashed", linewidth = 1) +
labs(x = "Valores Previstos (dias)", y = "Resíduos (dias)",
title = "Resíduos vs Valores Previstos") +
theme_minimal()
print(p1)
# 2. Q-Q Plot
p2 <- ggplot(residuos, aes(sample = Residuo)) +
stat_qq(alpha = 0.3, color = "blue") +
stat_qq_line(color = "red", linewidth = 1) +
labs(title = "Q-Q Plot (Normalidade dos Resíduos)") +
theme_minimal()
print(p2)
# 3. Histograma dos Resíduos
p3 <- ggplot(residuos, aes(x = Residuo)) +
geom_histogram(bins = 50, fill = "lightblue", color = "white") +
geom_vline(xintercept = 0, color = "red", linetype = "dashed", linewidth = 1) +
labs(x = "Resíduos (dias)", y = "Frequência", title = "Distribuição dos Resíduos") +
theme_minimal()
print(p3)
# 4. Real vs Previsto
p4 <- ggplot(residuos, aes(x = IDADE_DIAS, y = Predito)) +
geom_point(alpha = 0.3, color = "blue") +
geom_abline(intercept = 0, slope = 1, color = "red", linetype = "dashed", linewidth = 1) +
geom_smooth(method = "lm", se = FALSE, color = "blue", linewidth = 1) +
labs(x = "Dias Reais", y = "Dias Previstos",
title = paste0("Real vs Previsto (R² = ", round(r2_val, 3), ")")) +
theme_minimal()
print(p4)
# analise por grupo
resumo_grupo <- function(df, var_grupo, var_alvo = "IDADE_DIAS") {
df %>%
group_by(.data[[var_grupo]]) %>%
summarise(
N = n(),
Media = mean(.data[[var_alvo]]),
Mediana = median(.data[[var_alvo]]),
DP = sd(.data[[var_alvo]]),
.groups = "drop"
) %>%
arrange(desc(Media))
}
# Função para ANOVA ou t-test dependendo da variável
teste_significancia <- function(df, var_grupo, var_alvo = "IDADE_DIAS") {
grupos <- unique(df[[var_grupo]])
if(length(grupos) == 2) {
t_res <- t.test(.data[[var_alvo]] ~ .data[[var_grupo]], data = df %>% filter(.data[[var_grupo]] %in% grupos))
list(p = t_res$p.value, tipo = "t-test")
} else {
aov_res <- aov(.data[[var_alvo]] ~ .data[[var_grupo]], data = df)
p_val <- summary(aov_res)[[1]][["Pr(>F)"]][1]
list(p = p_val, tipo = "ANOVA")
}
}
# Lista de variáveis de grupo
grupos <- c("CAUSA_BLOCO", "SEXO", "RACACOR")
for(g in grupos) {
cat("========== ANÁLISE POR GRUPO:", g, "==========\n\n")
# Filtrar sexo ignorado
df_sub <- if(g == "SEXO") df_clean %>% filter(SEXO != "Ignorado") else df_clean
resumo <- resumo_grupo(df_sub, g)
print(resumo)
teste <- teste_significancia(df_sub, g)
cat("\nTeste de significância (", teste$tipo, "): p-valor =", format.pval(teste$p, digits = 3), "\n")
cat(ifelse(teste$p < 0.05, "✓ DIFERENÇAS SIGNIFICATIVAS\n\n", "✗ Sem diferença significativa\n\n"))
}
rm(list = ls())
if(!is.null(dev.list())) dev.off()
cat("\014")
library(tidyverse)
library(rsample)
library(yardstick)
library(broom)
# 1. import
load("mortalidade_infantil_limpo.RData")
df <- mortalidade_infantil_limpo
glimpse(df)
# 2. tidy
# clear NULL values
df_clean <- df %>%
select(IDADE_DIAS, RAZAOVIVMORT, PESO, SEMAGESTAC, CAUSA_BLOCO, SEXO, RACACOR) %>%
mutate(
across(c(IDADE_DIAS, PESO, SEMAGESTAC, RAZAOVIVMORT), ~ as.numeric(as.character(.)))
) %>%
drop_na()
glimpse(df_clean)
# 3. understand
summary(df_clean)
# correlation analysis
report_correlation <- function(df, var1, var2, sig_level = 0.05) {
x <- df[[var1]]
y <- df[[var2]]
cor_res <- cor.test(x, y)
r <- cor_res$estimate
p <- cor_res$p.value
signif_flag <- p < sig_level
direction <- ifelse(r > 0, "POSITIVA", "NEGATIVA")
cat(sprintf("%s x %s:\n", var1, var2))
cat(sprintf(" - Correlação (r): %7.4f\n", r))
cat(sprintf(" - P-valor       : %7.4f\n", p))
cat(sprintf(" - Significativo: %s\n", ifelse(signif_flag, "SIM ✓", "NÃO ✗")))
if (signif_flag) {
cat(sprintf(" - Interpretação: Correlação %s - quanto maior %s, %s %s\n\n",
direction,
var1,
ifelse(r > 0, "maior", "menor"),
var2))
} else {
cat("\n")
}
invisible(c(r = r, p = p))
}
cor_peso <- report_correlation(df_clean, "PESO", "IDADE_DIAS")
cor_sema <- report_correlation(df_clean, "SEMAGESTAC", "IDADE_DIAS")
cor_razao <- report_correlation(df_clean, "RAZAOVIVMORT", "IDADE_DIAS")
# A análise das correlações mostra que todas as variáveis numéricas
# apresentam correlação positiva com IDADE_DIAS e são estatisticamente significativas pelo p-valor,
# mas o efeito prático é desprezível considerando o coeficiente de Pearson.
# ! VIÉS
# Atenção: essas correlações foram calculadas apenas para os bebês que faleceram.
# Isso gera um viés de seleção, pois ignora totalmente os sobreviventes.
# O padrão observado pode não se aplicar a toda a população de nascimentos.
# Seria necessário um dataset complementar incluindo dados de bebês que sobreviveram.
# 3.1 model
# split training x test df
set.seed(42)
split <- initial_split(df_clean, prop = 0.8)
dados_treino <- training(split)
dados_teste <- testing(split)
modelo <- lm(IDADE_DIAS ~ PESO + SEMAGESTAC + RAZAOVIVMORT + CAUSA_BLOCO + SEXO + RACACOR,
data = dados_treino)
coef_df <- as.data.frame(summary(modelo)$coefficients) %>%
tibble::rownames_to_column("Variavel") %>%
mutate(
Significativo = case_when(
`Pr(>|t|)` < 0.05 ~ "***",
`Pr(>|t|)` < 0.1  ~ "*",
TRUE ~ ""
)
)
print(coef_df)
# teste
pred_teste <- predict(modelo, newdata = dados_teste)
resultado <- tibble(
Observado = dados_teste$IDADE_DIAS,
Predito  = pred_teste
)
rmse_val <- rmse(resultado, truth = Observado, estimate = Predito)$.estimate
mae_val  <- mae(resultado, truth = Observado, estimate = Predito)$.estimate
r2_val   <- rsq(resultado, truth = Observado, estimate = Predito)$.estimate
r2_treino <- summary(modelo)$r.squared
r2_adj    <- summary(modelo)$adj.r.squared
cat(glue::glue(
"MÉTRICAS DE ERRO:\n",
"  - RMSE: {round(rmse_val,2)} dias\n",
"  - MAE:  {round(mae_val,2)} dias\n\n",
"MÉTRICAS DE AJUSTE:\n",
"  - R² (Treino): {round(r2_treino,4)}\n",
"  - R² (Teste):  {round(r2_val,4)}\n",
"  - R² Ajustado: {round(r2_adj,4)}\n\n"
))
# Interpretação rápida
poder <- case_when(
r2_val > 0.7 ~ "ÓTIMO",
r2_val > 0.5 ~ "BOM",
r2_val > 0.3 ~ "MODERADO",
TRUE ~ "FRACO"
)
simbolo <- ifelse(r2_val > 0.5, "✓", "⚠")
cat(glue::glue(
"INTERPRETAÇÃO:\n",
"  {simbolo} Modelo com poder preditivo {poder}\n",
"  - Erro médio: {round(mae_val,1)} dias\n"
))
# teste f global
cat("========== 8. TESTE F GLOBAL (SIGNIFICÂNCIA DO MODELO) ==========\n\n")
f_stat <- summary(modelo)$fstatistic
p_global <- pf(f_stat[1], f_stat[2], f_stat[3], lower.tail = FALSE)
cat("Teste de hipótese:\n")
cat("  H0: Todos os coeficientes = 0 (modelo não explica nada)\n")
cat("  H1: Pelo menos um coeficiente ≠ 0 (modelo explica algo)\n\n")
cat(glue::glue(
"Estatística F:     {round(f_stat[1],2)}\n",
"Graus de liberdade: {f_stat[2]} e {f_stat[3]}\n",
"P-valor:           {format.pval(p_global, digits=3)}\n"
))
if (p_global < 0.05) {
cat("\n✓ CONCLUSÃO: Rejeitamos H0. O modelo é SIGNIFICATIVO (p < 0.05)\n")
cat("  O conjunto de variáveis explica significativamente a variação em IDADE_DIAS\n\n")
} else {
cat("\n✗ CONCLUSÃO: Não rejeitamos H0. O modelo NÃO é significativo (p >= 0.05)\n\n")
}
# residuos
residuos <- dados_teste %>%
mutate(Predito = pred_teste,
Residuo = IDADE_DIAS - pred_teste,
r2_teste = r2_val)
# 1. Resíduos vs Valores Ajustados
p1 <- ggplot(residuos, aes(x = Predito, y = Residuo)) +
geom_point(alpha = 0.3, color = "blue") +
geom_hline(yintercept = 0, color = "red", linetype = "dashed", linewidth = 1) +
labs(x = "Valores Previstos (dias)", y = "Resíduos (dias)",
title = "Resíduos vs Valores Previstos") +
theme_minimal()
print(p1)
# 2. Q-Q Plot
p2 <- ggplot(residuos, aes(sample = Residuo)) +
stat_qq(alpha = 0.3, color = "blue") +
stat_qq_line(color = "red", linewidth = 1) +
labs(title = "Q-Q Plot (Normalidade dos Resíduos)") +
theme_minimal()
print(p2)
# 3. Histograma dos Resíduos
p3 <- ggplot(residuos, aes(x = Residuo)) +
geom_histogram(bins = 50, fill = "lightblue", color = "white") +
geom_vline(xintercept = 0, color = "red", linetype = "dashed", linewidth = 1) +
labs(x = "Resíduos (dias)", y = "Frequência", title = "Distribuição dos Resíduos") +
theme_minimal()
print(p3)
# 4. Real vs Previsto
p4 <- ggplot(residuos, aes(x = IDADE_DIAS, y = Predito)) +
geom_point(alpha = 0.3, color = "blue") +
geom_abline(intercept = 0, slope = 1, color = "red", linetype = "dashed", linewidth = 1) +
geom_smooth(method = "lm", se = FALSE, color = "blue", linewidth = 1) +
labs(x = "Dias Reais", y = "Dias Previstos",
title = paste0("Real vs Previsto (R² = ", round(r2_val, 3), ")")) +
theme_minimal()
print(p4)
# analise por grupo
resumo_grupo <- function(df, var_grupo, var_alvo = "IDADE_DIAS") {
df %>%
group_by(across(all_of(var_grupo))) %>%
summarise(
N = n(),
Media = mean(.data[[var_alvo]]),
Mediana = median(.data[[var_alvo]]),
DP = sd(.data[[var_alvo]]),
.groups = "drop"
) %>%
arrange(desc(Media))
}
# Função para teste de significância
teste_significancia <- function(df, var_grupo, var_alvo = "IDADE_DIAS") {
grupos <- unique(df[[var_grupo]])
if(length(grupos) == 2) {
t_res <- t.test(df[[var_alvo]] ~ df[[var_grupo]], data = df %>% filter(.data[[var_grupo]] %in% grupos))
list(p = t_res$p.value, tipo = "t-test")
} else {
aov_res <- aov(df[[var_alvo]] ~ df[[var_grupo]], data = df)
p_val <- summary(aov_res)[[1]][["Pr(>F)"]][1]
list(p = p_val, tipo = "ANOVA")
}
}
# Lista de variáveis de grupo
grupos <- c("CAUSA_BLOCO", "SEXO", "RACACOR")
for(g in grupos) {
cat("========== ANÁLISE POR GRUPO:", g, "==========\n\n")
df_sub <- if(g == "SEXO") df_clean %>% filter(SEXO != "Ignorado") else df_clean
resumo <- resumo_grupo(df_sub, g)
print(resumo)
teste <- teste_significancia(df_sub, g)
cat("\nTeste de significância (", teste$tipo, "): p-valor =", format.pval(teste$p, digits = 3), "\n")
cat(ifelse(teste$p < 0.05, "✓ DIFERENÇAS SIGNIFICATIVAS\n\n", "✗ Sem diferença significativa\n\n"))
}
